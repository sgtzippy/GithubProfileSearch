{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/app-component/app.component.css","webpack:///./src/app/components/app-component/app.component.html","webpack:///./src/app/components/app-component/app.component.ts","webpack:///./src/app/components/search-profile-component/search-profile-component.component.css","webpack:///./src/app/components/search-profile-component/search-profile-component.component.html","webpack:///./src/app/components/search-profile-component/search-profile-component.component.ts","webpack:///./src/app/services/search-profile-service/search-profile-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule }   from '@angular/forms';\n\nimport { AppComponent } from './components/app-component/app.component';\nimport { SearchProfileComponentComponent } from './components/search-profile-component/search-profile-component.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchProfileComponentComponent\n  ],\n  imports: [\n      BrowserModule, HttpClientModule, FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<app-search-profile-component></app-search-profile-component>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <h1>Github Profiles Search</h1>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <form (ngSubmit)=\\\"search(searchBox.value)\\\" #searchForm=\\\"ngForm\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <input #searchBox id=\\\"search-box\\\" placeholder=\\\"Search Text\\\" class=\\\"form-control\\\" />\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Search</button>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"profileSearchResponse\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        Total Matching Users: {{profileSearchResponse.total_count}}\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-3\\\" *ngFor=\\\"let profile of profileSearchResponse.items | slice:0:10\\\">\\r\\n        <div class=\\\"card border-primary\\\" style=\\\"width: 18rem;\\\">\\r\\n            <img class=\\\"card-img-top\\\" src=\\\"{{profile.avatar_url}}\\\" alt=\\\"Github User\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <h5 class=\\\"card-title\\\">{{profile.login}}</h5>\\r\\n                <p class=\\\"card-text\\\">Type: {{profile.type}}</p>\\r\\n                <p class=\\\"card-text\\\">Is Site Admin: {{profile.site_admin}}</p>\\r\\n                <p class=\\\"card-text\\\">Score: {{profile.score}}</p>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" *ngIf=\\\"error\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        {{error}}\\r\\n    </div>\\r\\n</div>\\r\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { SearchProfileServiceService } from '../../services/search-profile-service/search-profile-service.service';\n\nimport { ProfileSearchResponse } from '../../models/profile-search-response';\n\n@Component({\n  selector: 'app-search-profile-component',\n  templateUrl: './search-profile-component.component.html',\n  styleUrls: ['./search-profile-component.component.css']\n})\nexport class SearchProfileComponentComponent implements OnInit {\n    private profileSearchResponse: ProfileSearchResponse;\r\n    private error: string;\n\n    constructor(private searchProfileServiceService: SearchProfileServiceService) { }\n\n    ngOnInit(): void {\r\n    }\n\n    search(query: string): void {\r\n        this.searchProfileServiceService.searchProfiles(query)\r\n            .subscribe(\r\n                response => {\r\n                    this.profileSearchResponse = response;\r\n                    this.error = null;\r\n                },\r\n                error => {\r\n                    this.error = error;\r\n                    this.profileSearchResponse = null;\r\n                }\r\n            );\r\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of, throwError  } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { ProfileSearchResponse } from '../../models/profile-search-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchProfileServiceService {\n    directApiUrl = 'https://api.github.com/search/users';\n\n    constructor(private http: HttpClient) { }\n\n    searchProfiles(query: string): Observable<ProfileSearchResponse> {\r\n        // if no query, return empty profile response.\r\n        if (!query.trim()) {\r\n            return of(null);\r\n        }\r\n        // Manually throw error if xxxx detected\r\n        if (query.trim() == 'xxxx') {\r\n            return throwError('Can not search for \"xxxx\".');\r\n        }\r\n        return this.http.get<ProfileSearchResponse>(`${this.directApiUrl}?q=${query.trim()}`).pipe(\r\n            tap(_ => console.log(`found profiles matching \"${query}\"`)),\r\n            catchError(this.handleError<ProfileSearchResponse>('searchProfiles', null))\r\n        );\r\n    }\n\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n            // Log message to console. Normally we would log this to some remote logging server. Then rethrow error so UI can respond.\r\n            console.error(error);\r\n\r\n            return throwError(error);\r\n        };\r\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}